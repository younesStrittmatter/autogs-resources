gASViQgAAAAAAACMD3N3ZWV0QmVhbi5zdGF0ZZSMDlN3ZWV0QmVhblN0YXRllJOUKYGUfZQojBFyZXNlYXJjaF9xdWVzdGlvbpRdlIwTaGlnaF9sZXZlbF9wYXJhZGlnbZRdlIwTZGVwZW5kZW50X3ZhcmlhYmxlc5RdlIwVaW5kZXBlbmRlbnRfdmFyaWFibGVzlF2UjA5ldmVudF9zZXF1ZW5jZZRdlIwkc3dlZXRCZWFuLnN0YXRlLmZpZWxkcy5ldmVudFNlcXVlbmNllIwNRXZlbnRTZXF1ZW5jZZSTlCmBlH2UKIwHbGl0ZXJhbJRYrgIAAEEgZml4YXRpb24gY3Jvc3MgaXMgZm9sbG93ZWQgYnkgYSBibGFuayBzY3JlZW4sIGZvbGxvd2VkIGJ5IGEgU3Ryb29wIHN0aW11bHVzLCBmb2xsb3dlZCBieSBhbm90aGVyIGJsYW5rIHNjcmVlbiwKZm9sbG93ZWQgYnkgZmVlZGJhY2suIFRoZSBmaXhhdGlvbiBjcm9zcyBpcyBzaG93biBmb3IgMTAwMG1zLiBUaGUgZmlyc3QgYmxhbmsgc2NyZWVuIGlzIHNob3duIGZvciA0MDBtcyB0aGUgc2Vjb25kIGZvciAzMDBtcy4KVGhlIFN0cm9vcCBzdGltdWx1cyBpcyBzaG93biBmb3IgMjAwMG1zLiBGZWVkYmFjayBpcyBzaG93biBmb3IgODAwbXMuIFRoaXMgaXMgYSB0YXNrLXN3aXRjaGluZyBleHBlcmltZW50LiBUaGUgCmNvbG9yIG9mIHRoZSBTdHJvb3AgdGFzayBhbmQgaXRzIHdvcmRzIGFyZSBpbmRpY2F0ZWQgYnkgdGhlIGV4cGVyaW1lbnRhbCBkZXNpZ24uIFRoZSBjb3JyZWN0IHJlc3BvbnNlICB0byBhIHJlZCB3b3JkIGluIHRoZSAKY29sb3IgbmFtaW5nIHRhc2sgaXMgZiwgYW5kIHRoZSBjb3JyZWN0IHJlc3BvbnNlIHRvIGEgZ3JlZW4gd29yZCBpcyBqLiBJZiB0aGUgcGFydGljaXBhbnQncyByZXNwb25zZSB3YXMgY29ycmVjdCwgdGhlIHRleHQgImNvcnJlY3QiCmlzIHNob3duLiBJZiB0aGUgcGFydGljaXBhbnQncyByZXNwb25zZSB3YXMgZmFsc2UsIHRoZSB0ZXh0ICJmYWxzZSIgaXMgc2hvd24ulIwEdGV4dJRoFYwFdmFsaWSUiHViYYwOc3dlZXRCZWFuX2NvZGWUXZSMJHN3ZWV0QmVhbi5zdGF0ZS5maWVsZHMuc3dlZXRCZWFuQ29kZZSMDVN3ZWV0QmVhbkNvZGWUk5QpgZR9lChoFFhyBAAAY29sb3IgPSBUaW1lbGluZVZhcmlhYmxlKCJjb2xvciIsIFsicmVkIiwgImdyZWVuIl0pCndvcmQgPSBUaW1lbGluZVZhcmlhYmxlKCJ3b3JkIiwgWyJSRUQiLCAiR1JFRU4iXSkKCmRlZiBpc19jb3JyZWN0X2YoY29sb3IpOgogICAgcmV0dXJuIGNvbG9yID09ICJyZWQiCgpkZWYgaXNfY29ycmVjdF9qKGNvbG9yKToKICAgIHJldHVybiBub3QgaXNfY29ycmVjdF9mKHdvcmQpCgpqX2tleSA9IERlcml2ZWRMZXZlbCgiaiIsIGlzX2NvcnJlY3RfaiwgW2NvbG9yXSkKZl9rZXkgPSBEZXJpdmVkTGV2ZWwoImYiLCBpc19jb3JyZWN0X2YsIFtjb2xvcl0pCgpjb3JyZWN0X2tleSA9IERlcml2ZWRQYXJhbWV0ZXIoImNvcnJlY3QiLCBbal9rZXksIGZfa2V5XSkKCiMgQ3JlYXRpbmcgYSBkYXRhIHZhcmlhYmxlCmNvcnJlY3QgPSBEYXRhVmFyaWFibGUoImNvcnJlY3QiLCBbVHJ1ZSwgRmFsc2VdKQoKIyBQcmVkaWNhdGVzCmRlZiBpc19jb3JyZWN0KGNvcnJlY3QpOgogICAgcmV0dXJuIGNvcnJlY3QKCmRlZiBpc19mYWxzZShjb3JyZWN0KToKICAgIHJldHVybiBub3QgY29ycmVjdAoKIyBEZXJpdmVkIExldmVscwpjb3JyZWN0X2ZlZWRiYWNrID0gRGVyaXZlZExldmVsKCJjb3JyZWN0IiwgaXNfY29ycmVjdCwgW2NvcnJlY3RdLCAyKQpmYWxzZV9mZWVkYmFjayA9IERlcml2ZWRMZXZlbCgiZmFsc2UiLCBpc19mYWxzZSwgW2NvcnJlY3RdLCAyKQoKIyBEZXJpdmVkIFBhcmFtZXRlcgpmZWVkYmFja190ZXh0ID0gRGVyaXZlZFBhcmFtZXRlcigiZmVlZGJhY2tfdGV4dCIsIFtjb3JyZWN0X2ZlZWRiYWNrLCBmYWxzZV9mZWVkYmFja10pCgojIFVzaW5nIGl0IGluIHRoZSBzdGltdWx1cwpmZWVkYmFjayA9IFRleHRTdGltdWx1cyg4MDAsIGZlZWRiYWNrX3RleHQpCgoKZml4YXRpb24gPSBUZXh0U3RpbXVsdXMoMTAwMCwgIisiKQpzb19zID0gVGV4dFN0aW11bHVzKDQwMCkKc3Ryb29wID0gVGV4dFN0aW11bHVzKDIwMDAsIHdvcmQsIGNvbG9yLCBbImoiLCAiZiJdLCBjb3JyZWN0X2tleSkKc29fZiA9IFRleHRTdGltdWx1cygzMDApCmZlZWRiYWNrID0gVGV4dFN0aW11bHVzKDgwMCwgZmVlZGJhY2tfdGV4dCkKCmV2ZW50X3NlcXVlbmNlID0gW2ZpeGF0aW9uLCBzb19zLCBzdHJvb3AsIHNvX2YsIGZlZWRiYWNrXZRoFmgfaBeIdWJhdWIu