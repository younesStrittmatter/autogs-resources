gASVtQUAAAAAAACMD3N3ZWV0QmVhbi5zdGF0ZZSMDlN3ZWV0QmVhblN0YXRllJOUKYGUfZQojBFyZXNlYXJjaF9xdWVzdGlvbpRdlIwTaGlnaF9sZXZlbF9wYXJhZGlnbZRdlIwoc3dlZXRCZWFuLnN0YXRlLmZpZWxkcy5oaWdoTGV2ZWxQYXJhZGlnbZSMEUhpZ2hMZXZlbFBhcmFkaWdtlJOUKYGUfZQojAdsaXRlcmFslFiRAQAAQSBmaXhhdGlvbiBjcm9zcyBpcyBmb2xsb3dlZCBieSBhIGJsYW5rIHNjcmVlbiwgZm9sbG93ZWQgYnkgYSBTdHJvb3Agc3RpbXVsdXMsIGZvbGxvd2VkIGJ5IGFub3RoZXIgYmxhbmsgc2NyZWVuLiAKVGhlIGZpeGF0aW9uIGNyb3NzIGlzIHNob3duIGZvciAxMDAwbXMuIFRoZSBzb2EgYW5kIGl0aSBkdXJhdGlvbnMgYXJlIGluZGljYXRlZCBieSB0aGUgZXhwZXJpbWVudGFsIGRlc2lnbi4gClRoZSBjb2xvciBvZiB0aGUgU3Ryb29wIHRhc2sgYW5kIGl0cyB3b3JkcyBhcmUgYWxzbyBpbmRpY2F0ZWQgYnkgdGhlIGV4cGVyaW1lbnRhbCBkZXNpZ24uIFRoZSBjb3JyZWN0IHJlc3BvbnNlICB0byBhIHJlZCB3b3JkCmlzIGYsIGFuZCB0aGUgY29ycmVjdCByZXNwb25zZSB0byBhIGdyZWVuIHdvcmQgaXMgai6UjAR0ZXh0lGgPjAV2YWxpZJSIdWJhjBNkZXBlbmRlbnRfdmFyaWFibGVzlF2UjBVpbmRlcGVuZGVudF92YXJpYWJsZXOUXZSMDnN3ZWV0QmVhbl9jb2RllF2UjCRzd2VldEJlYW4uc3RhdGUuZmllbGRzLnN3ZWV0QmVhbkNvZGWUjA1Td2VldEJlYW5Db2RllJOUKYGUfZQoaA5YxgIAAGNvbG9yID0gVGltZWxpbmVWYXJpYWJsZSgiY29sb3IiLCBbInJlZCIsICJncmVlbiJdKQp3b3JkID0gVGltZWxpbmVWYXJpYWJsZSgid29yZCIsIFsiUkVEIiwgIkdSRUVOIl0pCnNvX3NfZHVyYXRpb24gPSBUaW1lbGluZVZhcmlhYmxlKCJzb19zIiwgWzEwMCwgMjAwLCAxMDAwXSkKc29fZl9kdXJhdGlvbiA9IFRpbWVsaW5lVmFyaWFibGUoInNvX2YiLCBbMTAwLCAxMDAwLCAyMDAwXSkKCmRlZiBpc19jb3JyZWN0X2YoY29sb3IpOgogICAgcmV0dXJuIGNvbG9yID09ICJyZWQiCgpkZWYgaXNfY29ycmVjdF9qKGNvbG9yKToKICAgIHJldHVybiBub3QgaXNfY29ycmVjdF9mKHdvcmQpCgpqX2tleSA9IERlcml2ZWRMZXZlbCgiaiIsIGlzX2NvcnJlY3RfaiwgW2NvbG9yXSkKZl9rZXkgPSBEZXJpdmVkTGV2ZWwoImYiLCBpc19jb3JyZWN0X2YsIFtjb2xvcl0pCgpjb3JyZWN0X2tleSA9IERlcml2ZWRQYXJhbWV0ZXIoImNvcnJlY3QiLCBbal9rZXksIGZfa2V5XSkKCmZpeGF0aW9uID0gVGV4dFN0aW11bHVzKDgwMCwgIisiKQpzb19zID0gVGV4dFN0aW11bHVzKHNvX3NfZHVyYXRpb24pCnN0cm9vcCA9IFRleHRTdGltdWx1cygyMDAwLCB3b3JkLCBjb2xvciwgWyJmIiwgImoiXSwgY29ycmVjdF9rZXkpCnNvX2YgPSBUZXh0U3RpbXVsdXMoc29fZl9kdXJhdGlvbikKCmV2ZW50X3NlcXVlbmNlID0gW2ZpeGF0aW9uLCBzb19zLCBzdHJvb3AsIHNvX2ZdlGgQaB1oEYh1YmF1Yi4=