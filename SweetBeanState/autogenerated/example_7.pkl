gASVwAUAAAAAAACMD3N3ZWV0QmVhbi5zdGF0ZZSMDlN3ZWV0QmVhblN0YXRllJOUKYGUfZQojBFyZXNlYXJjaF9xdWVzdGlvbpRdlIwTaGlnaF9sZXZlbF9wYXJhZGlnbZRdlIwTZGVwZW5kZW50X3ZhcmlhYmxlc5RdlIwVaW5kZXBlbmRlbnRfdmFyaWFibGVzlF2UjA5ldmVudF9zZXF1ZW5jZZRdlIwkc3dlZXRCZWFuLnN0YXRlLmZpZWxkcy5ldmVudFNlcXVlbmNllIwNRXZlbnRTZXF1ZW5jZZSTlCmBlH2UKIwHbGl0ZXJhbJRYkQEAAEEgZml4YXRpb24gY3Jvc3MgaXMgZm9sbG93ZWQgYnkgYSBibGFuayBzY3JlZW4sIGZvbGxvd2VkIGJ5IGEgU3Ryb29wIHN0aW11bHVzLCBmb2xsb3dlZCBieSBhbm90aGVyIGJsYW5rIHNjcmVlbi4gClRoZSBmaXhhdGlvbiBjcm9zcyBpcyBzaG93biBmb3IgMTAwMG1zLiBUaGUgc29hIGFuZCBpdGkgZHVyYXRpb25zIGFyZSBpbmRpY2F0ZWQgYnkgdGhlIGV4cGVyaW1lbnRhbCBkZXNpZ24uIApUaGUgY29sb3Igb2YgdGhlIFN0cm9vcCB0YXNrIGFuZCBpdHMgd29yZHMgYXJlIGFsc28gaW5kaWNhdGVkIGJ5IHRoZSBleHBlcmltZW50YWwgZGVzaWduLiBUaGUgY29ycmVjdCByZXNwb25zZSAgdG8gYSByZWQgd29yZAppcyBmLCBhbmQgdGhlIGNvcnJlY3QgcmVzcG9uc2UgdG8gYSBncmVlbiB3b3JkIGlzIGoulIwEdGV4dJRoFYwFdmFsaWSUiHViYYwOc3dlZXRCZWFuX2NvZGWUXZSMJHN3ZWV0QmVhbi5zdGF0ZS5maWVsZHMuc3dlZXRCZWFuQ29kZZSMDVN3ZWV0QmVhbkNvZGWUk5QpgZR9lChoFFjGAgAAY29sb3IgPSBUaW1lbGluZVZhcmlhYmxlKCJjb2xvciIsIFsicmVkIiwgImdyZWVuIl0pCndvcmQgPSBUaW1lbGluZVZhcmlhYmxlKCJ3b3JkIiwgWyJSRUQiLCAiR1JFRU4iXSkKc29fc19kdXJhdGlvbiA9IFRpbWVsaW5lVmFyaWFibGUoInNvX3MiLCBbMTAwLCAyMDAsIDEwMDBdKQpzb19mX2R1cmF0aW9uID0gVGltZWxpbmVWYXJpYWJsZSgic29fZiIsIFsxMDAsIDEwMDAsIDIwMDBdKQoKZGVmIGlzX2NvcnJlY3RfZihjb2xvcik6CiAgICByZXR1cm4gY29sb3IgPT0gInJlZCIKCmRlZiBpc19jb3JyZWN0X2ooY29sb3IpOgogICAgcmV0dXJuIG5vdCBpc19jb3JyZWN0X2Yod29yZCkKCmpfa2V5ID0gRGVyaXZlZExldmVsKCJqIiwgaXNfY29ycmVjdF9qLCBbY29sb3JdKQpmX2tleSA9IERlcml2ZWRMZXZlbCgiZiIsIGlzX2NvcnJlY3RfZiwgW2NvbG9yXSkKCmNvcnJlY3Rfa2V5ID0gRGVyaXZlZFBhcmFtZXRlcigiY29ycmVjdCIsIFtqX2tleSwgZl9rZXldKQoKZml4YXRpb24gPSBUZXh0U3RpbXVsdXMoODAwLCAiKyIpCnNvX3MgPSBUZXh0U3RpbXVsdXMoc29fc19kdXJhdGlvbikKc3Ryb29wID0gVGV4dFN0aW11bHVzKDIwMDAsIHdvcmQsIGNvbG9yLCBbImYiLCAiaiJdLCBjb3JyZWN0X2tleSkKc29fZiA9IFRleHRTdGltdWx1cyhzb19mX2R1cmF0aW9uKQoKZXZlbnRfc2VxdWVuY2UgPSBbZml4YXRpb24sIHNvX3MsIHN0cm9vcCwgc29fZl2UaBZoH2gXiHViYXViLg==